{"version":3,"file":"static/js/898.c14a8ff8.chunk.js","mappings":"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","sources":["actions/common.js","components/common/TextField.js","components/commonlayout/Navbar.js","components/commonlayout/Footer.js","components/commonlayout/BaseLayout.js","components/dashboard/SendToken.js","components/common/QRCodeGenerator.js","components/dashboard/ReceiveToken.js","components/dashboard/CustomToken.js","components/dashboard/Dashboard.js","utils/appendScript.js","utils/removeScript.js","../node_modules/classnames/index.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\nimport { ToastPopup } from \"./constant\";\r\nimport axios from \"axios\";\r\nimport TokenABI from \"../contracts/abi.json\"\r\n\r\nexport const getCoinBalance = async (signer) => {\r\n    const balvalue = await signer.getBalance();\r\n    const result = ethers.utils.formatUnits(balvalue, 18); // 18 is the number of decimal places\r\n    return result\r\n}\r\n\r\nexport const getTokenBalance = async (contractAddress, address, signer) => {\r\n\r\n    const tokencontract = new ethers.Contract(contractAddress, TokenABI, signer);\r\n    const assetrate = await tokencontract.balanceOf(address);\r\n    const convertedprice = ethers.utils.formatUnits(assetrate, 'ether');\r\n    return convertedprice\r\n}\r\n\r\nexport const getTokenSymbol = async (contractAddress, signer) => {\r\n\r\n    const tokencontract = new ethers.Contract(contractAddress, TokenABI, signer);\r\n    const assetsymbol = await tokencontract.symbol();\r\n    return assetsymbol\r\n}\r\n\r\nexport const copyTextToClipboard = (text) => {\r\n    navigator.clipboard.writeText(text)\r\n        .then(() => {\r\n            ToastPopup.success(\"Copied\")\r\n        })\r\n        .catch((error) => {\r\n            ToastPopup.failure(\"Error copying text to clipboard:\")\r\n        });\r\n}\r\n\r\n\r\nexport const getMarketPrice = async (ids) => {\r\n    try {\r\n\r\n        let result = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`)\r\n        let temp = result.data;\r\n        return parseFloat(temp[ids][\"usd\"]).toFixed(4)\r\n    } catch (err) {\r\n        console.log(\"errr\", err)\r\n        return 0\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const sendCoin = async (provider, signer, sendAddress, sendValue) => {\r\n    const transactionHash = await signer.sendTransaction({\r\n        to: sendAddress,\r\n        value: ethers.utils.parseEther(sendValue),\r\n    });\r\n    console.log(\"transactionHash\", transactionHash.hash)\r\n    const [txhash, status] = await getTxnStatus(transactionHash.hash, provider);\r\n    return { txhash, status }\r\n}\r\n\r\n\r\nexport const sendTokenFromContract = async (provider, signer, contractAddress, sendAddress, sendValue) => {\r\n    const contract = new ethers.Contract(contractAddress, TokenABI, signer);\r\n    const recipientAddress = sendAddress;\r\n    console.log(\"sendAddress\", sendAddress)\r\n    console.log(\"sendValue\", sendValue)\r\n\r\n    const amount = ethers.utils.parseUnits(sendValue, '18');\r\n    const transactionHash = await contract.transfer(recipientAddress, amount);\r\n    console.log(\"transactionHash\", transactionHash.hash)\r\n    const [txhash, status] = await getTxnStatus(transactionHash.hash, provider);\r\n    return { txhash, status }\r\n}\r\n\r\n\r\nconst sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\n\r\nexport const getTxnStatus = async (txHash, provider) => {\r\n    let transactionReceipt = null\r\n    while (transactionReceipt == null) { // Waiting expectedBlockTime until the transaction is mined\r\n        transactionReceipt = await provider.getTransactionReceipt(txHash);\r\n        await sleep(3000)\r\n    }\r\n    if (transactionReceipt.status) {\r\n        return [txHash, true];\r\n    } else {\r\n        return [txHash, false];\r\n    }\r\n}","import React from 'react'\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\"\n\nconst TextField = ({\n  name,\n  placeholder,\n  value,\n  label,\n  error,\n  info,\n  type,\n  onChange,\n  disabled,\n  forgotView,\n  forgotLink,\n  isRequired,\n  id\n\n}) => {\n\n  return (\n\n    <>\n      <label lassName={`form-label `}>\n        {label} <small>{isRequired && \"*\"}</small>\n      </label>\n      <input type={type} id={id}\n        className={classnames('form-control', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        name={name}\n        disabled={disabled} />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && (<div className=\"invalid-feedback text-left text-danger\">{error}</div>)}\n    </>\n\n\n\n\n\n\n  )\n}\n\nTextField.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string,\n  label: PropTypes.string,\n  forgotView: PropTypes.string,\n  forgotLink: PropTypes.string,\n  isRequired: false,\n  id: PropTypes.string\n}\n\nTextField.defaultProps = {\n  type: 'text'\n}\n\nexport default TextField;","import React, { useEffect } from \"react\";\r\nimport { logoutUser } from '../../actions/authAction'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport appendScript from \"../../utils/appendScript\"\r\nimport removeScript from \"../../utils/removeScript\"\r\nimport { ToastPopup } from \"../../actions/constant\"\r\n\r\nimport truncateEthAddress from 'truncate-eth-address'\r\n\r\nconst Navbar = ({ children, }) => {\r\n    const { key } = useLocation()\r\n\r\n    useEffect(() => {\r\n        appendScript(\"./assets/js/vendor.min.js\")\r\n        appendScript(\"./assets/js/theme.min.js\")\r\n\r\n        return () => {\r\n            removeScript(\"./assets/js/vendor.min.js\")\r\n            removeScript(\"./assets/js/theme.min.js\")\r\n        }\r\n\r\n    }, [key])\r\n    const dispatch = useDispatch()\r\n\r\n    const { user, } = useSelector(state => state.auth)\r\n    const navlinks = [\r\n        { name: \"Dashboard\", link: \"/user/dashboard\", icon: <i data-feather=\"pie-chart\" ></i> },\r\n\r\n        { name: \"Invoices\", link: \"/user/invoice\", icon: <i data-feather=\"file\" ></i> },\r\n        {\r\n            name: \"QR Payments\", link: \"/user/qrpayments\", icon: <i data-feather=\"camera\" ></i>\r\n        },\r\n        { name: \"Web Payments\", link: \"/user/webpayment\", icon: <i data-feather=\"shopping-bag\" ></i> },\r\n        { name: \"API Keys\", link: \"/user/setting/apikey\", icon: <i data-feather=\"send\" ></i> },\r\n    ]\r\n    const pathname = window.location.pathname;\r\n\r\n    const navRender = navlinks.map(result => {\r\n        var currentLink\r\n        if (pathname === result.link) {\r\n            currentLink = \"active\"\r\n        }\r\n        return <li className=\"nav-item pe-3\">\r\n            <Link className={`nav-link ${currentLink}`} to={result.link}>\r\n                <div className=\"d-flex align-items-center\">\r\n                    <span className=\"icon-xs me-1 flex-shrink-0\">\r\n                        {/*?xml version=\"1.0\" encoding=\"UTF-8\"?*/}\r\n                        {result.icon}\r\n                    </span>\r\n                    <div className=\"flex-grow-1\">{result.name}</div>\r\n                </div>\r\n            </Link>\r\n        </li>\r\n    })\r\n\r\n    var photoLink = \"../../assets/images/avatars/img-8.jpg\"\r\n    if (user.photo) {\r\n        photoLink = user.photo\r\n    }\r\n    return <header>\r\n        <nav className=\"navbar navbar-expand-lg topnav-menu navbar-light shadow\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand me-lg-3 me-auto\" href=\"/\">\r\n                    <img\r\n                        src=\"./assets/images/logo.png\"\r\n                        height={30}\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"\"\r\n                    />\r\n                </a>\r\n                <a\r\n                    href=\"#\"\r\n                    className=\"navbar-toggler me-3\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#topnav-menu-content4\"\r\n                    aria-controls=\"topnav-menu-content4\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </a>\r\n                <div className=\"collapse navbar-collapse\" id=\"topnav-menu-content4\">\r\n                    <ul className=\"navbar-nav mx-auto\">\r\n                        {navRender}\r\n                    </ul>\r\n                    <ul className=\"navbar-nav align-items-center\">\r\n                        {/* notification start */}\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a\r\n                                className=\"nav-link dropdown-toggle\"\r\n                                href=\"#\"\r\n                                id=\"notifications\"\r\n                                role=\"button\"\r\n                                data-bs-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                            >\r\n                                <span className=\"icon-xs\">\r\n                                    {/*?xml version=\"1.0\" encoding=\"UTF-8\"?*/}\r\n                                    <svg\r\n                                        width=\"24px\"\r\n                                        height=\"24px\"\r\n                                        viewBox=\"0 0 24 24\"\r\n                                        version=\"1.1\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                    >\r\n                                        {/* Generator: Sketch 52.2 (67145) - http://www.bohemiancoding.com/sketch */}\r\n                                        <title>Stockholm-icons / General / Notification#2</title>\r\n                                        <desc>Created with Sketch.</desc>\r\n                                        <g\r\n                                            id=\"Stockholm-icons-/-General-/-Notification#2\"\r\n                                            stroke=\"none\"\r\n                                            strokeWidth={1}\r\n                                            fill=\"none\"\r\n                                            fillRule=\"evenodd\"\r\n                                        >\r\n                                            <rect id=\"bound\" x={0} y={0} width={24} height={24} />\r\n                                            <path\r\n                                                d=\"M13.2070325,4 C13.0721672,4.47683179 13,4.97998812 13,5.5 C13,8.53756612 15.4624339,11 18.5,11 C19.0200119,11 19.5231682,10.9278328 20,10.7929675 L20,17 C20,18.6568542 18.6568542,20 17,20 L7,20 C5.34314575,20 4,18.6568542 4,17 L4,7 C4,5.34314575 5.34314575,4 7,4 L13.2070325,4 Z\"\r\n                                                id=\"Combined-Shape\"\r\n                                                fill=\"#335EEA\"\r\n                                            />\r\n                                            <circle\r\n                                                id=\"Oval\"\r\n                                                fill=\"#335EEA\"\r\n                                                opacity=\"0.3\"\r\n                                                cx=\"18.5\"\r\n                                                cy=\"5.5\"\r\n                                                r=\"2.5\"\r\n                                            />\r\n                                        </g>\r\n                                    </svg>\r\n                                </span>\r\n                            </a>\r\n                            <div className=\"dropdown-menu p-2\" aria-labelledby=\"notifications\">\r\n                                <Link className=\"dropdown-item p-2\" href=\"/\">\r\n                                    Apothem\r\n                                </Link>\r\n                                {/* item end */}\r\n                                {/* item start */}\r\n                                <a className=\"dropdown-item p-2\" href=\"#\" onClick={(e) => {\r\n                                    e.preventDefault()\r\n                                    ToastPopup.info(\"Mainnet will launch soon\")\r\n                                }}>\r\n                                    Mainnet\r\n                                </a>\r\n                            </div>\r\n                        </li>\r\n                        {/* notification end */}\r\n                        {/* profile dropdown start */}\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a\r\n                                className=\"nav-link dropdown-toggle py-0\"\r\n                                href=\"#\"\r\n                                id=\"user\"\r\n                                role=\"button\"\r\n                                data-bs-toggle=\"dropdown\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                            >\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"flex-shrink-0\">\r\n                                        <img\r\n                                            src={photoLink}\r\n                                            className=\"avatar avatar-xs rounded-circle me-2\"\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"flex-grow-1 ms-1 lh-base\">\r\n                                        <span className=\"fw-semibold fs-13 d-block line-height-normal\">\r\n                                            {user.firstName}\r\n                                        </span>\r\n                                        <span className=\"text-muted fs-13\">{user.walletAddress && truncateEthAddress(user.walletAddress)}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                            <div className=\"dropdown-menu p-2\" aria-labelledby=\"user\">\r\n                                {/* item start */}\r\n                                {/* <a className=\"dropdown-item p-2\" href=\"#\">\r\n                                    <i\r\n                                        className=\"icon icon-xxs me-1 icon-dual\"\r\n                                        data-feather=\"user\"\r\n                                    />\r\n                                    Profile\r\n                                </a> */}\r\n                                {/* item end */}\r\n                                {/* item start */}\r\n                                <Link to=\"/user/setting\" className=\"dropdown-item p-2\" >\r\n                                    <i\r\n                                        className=\"icon icon-xxs me-1 icon-dual\"\r\n                                        data-feather=\"settings\"\r\n                                    />\r\n                                    Settings\r\n                                </Link>\r\n                                {/* item end */}\r\n\r\n                                {/* item start */}\r\n                                <Link to=\"/user/setting\" onClick={(e) => {\r\n                                    e.preventDefault()\r\n                                    ToastPopup.info(\"Not available now\")\r\n                                }} className=\"dropdown-item p-2\" href=\"#\">\r\n                                    <i\r\n                                        className=\"icon icon-xxs me-1 icon-dual\"\r\n                                        data-feather=\"aperture\"\r\n                                    />\r\n                                    Support\r\n                                </Link>\r\n                                {/* item end */}\r\n                                <div className=\"dropdown-divider\" />\r\n                                {/* item start */}\r\n                                <Link className=\"dropdown-item p-2\" to=\"/logout\" onClick={() => {\r\n                                    dispatch(logoutUser())\r\n                                }}>\r\n                                    <i\r\n                                        className=\"icon icon-xxs me-1 icon-dual\"\r\n                                        data-feather=\"unlock\"\r\n                                    />\r\n                                    Sign Out\r\n                                </Link>\r\n                                {/* item end */}\r\n                            </div>\r\n                        </li>\r\n                        {/* profile dropdown end */}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n\r\n\r\n}\r\nexport default Navbar;","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <section className=\"section py-4 position-relative\">\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col\">\r\n                        <ul className=\"list-inline list-with-separator mb-0\">\r\n                            <li className=\"list-inline-item me-0\">\r\n                                <a href=\"#\">About</a>\r\n                            </li>\r\n                            <li className=\"list-inline-item me-0\">\r\n                                <a href=\"#\">Privacy</a>\r\n                            </li>\r\n                            <li className=\"list-inline-item me-0\">\r\n                                <a href=\"#\">Terms</a>\r\n                            </li>\r\n                            <li className=\"list-inline-item me-0\">\r\n                                <a href=\"#\">Developers</a>\r\n                            </li>\r\n                            <li className=\"list-inline-item me-0\">\r\n                                <a href=\"#\">Support</a>\r\n                            </li>\r\n                            <li className=\"list-inline-item me-0\">\r\n                                <a href=\"#\">\r\n                                    Careers{\" \"}\r\n                                    <span className=\"align-middle badge badge-soft-info rounded-pill fw-normal fs-11 px-2 py-1\">\r\n                                        We're hiring\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-auto text-md-end mt-2 mt-md-0\">\r\n                        <p className=\"fs-14 mb-0\">\r\n                            {\" \"}\r\n                            © Xipay. All rights reserved.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nconst BaseLayout = ({ children }) => {\r\n    return <>\r\n        <Navbar />\r\n        {children}\r\n        <Footer />\r\n    </>\r\n}\r\nexport default BaseLayout;","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AVAILABLE_ASSETS, BlockPopup, RPC_URL_BY_CHAIN, EXPLORER_TXN_URL_LIST, ToastPopup, addressRegex } from '../../actions/constant'\r\nimport { getCoinBalance, getMarketPrice, getTokenBalance, sendCoin, sendTokenFromContract } from '../../actions/common'\r\nimport truncateEthAddress from 'truncate-eth-address'\r\n\r\nconst SendToken = ({ getBalanceDashboard }) => {\r\n\r\n    const { chainId, signer, provider } = useSelector(state => state.web3)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n\r\n    const [selectedasset, setselectedasset] = useState(null)\r\n    const [selectedtype, setselectedtype] = useState(null)\r\n    const [filterAsset, setfilterAsset] = useState([])\r\n    const [assetBalance, setAssetBalance] = useState(0)\r\n    const [currentPrice, setcurrentPrice] = useState(0)\r\n    const [balloading, setballoading] = useState(false)\r\n\r\n    //Sent Token Forms\r\n    const [receiverAddress, setreceiverAddress] = useState(\"0x3d7c8e92dc84c2d0d36e7545d3c39b1464d86e95\")\r\n    const [sendToken, setSendToken] = useState(\"10\")\r\n\r\n    //\r\n    const [txnStatus, settxnStatus] = useState({})\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        filterAssets()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        settxnStatus({})\r\n    }, [sendToken, receiverAddress, selectedasset])\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedasset) {\r\n            getBalance()\r\n            const findType = AVAILABLE_ASSETS.find(x => x.value === selectedasset && x.networkID === parseInt(chainId))\r\n            setselectedtype(findType.type)\r\n        }\r\n\r\n    }, [selectedasset])\r\n\r\n    const getBalance = async () => {\r\n        setAssetBalance(0)\r\n        setcurrentPrice(0)\r\n        setballoading(true)\r\n        let findasset = AVAILABLE_ASSETS.find(x => x.value === selectedasset && x.networkID === parseInt(chainId))\r\n        if (findasset && findasset.type === \"coin\") {\r\n            let getBal = await getCoinBalance(signer)\r\n            let currentprice = await getMarketPrice(findasset.ids)\r\n            setAssetBalance(getBal)\r\n            setcurrentPrice(currentprice)\r\n            setballoading(false)\r\n        } else if (findasset && findasset.type === \"token\") {\r\n            let getBal = await getTokenBalance(findasset.contractAddress, user.walletAddress, signer)\r\n            let currentprice = await getMarketPrice(findasset.ids)\r\n            setAssetBalance(getBal)\r\n            setcurrentPrice(currentprice)\r\n            setballoading(false)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const filterAssets = () => {\r\n        const filterValue = AVAILABLE_ASSETS.filter(x => x.networkID === parseInt(chainId))\r\n\r\n        if (filterValue.length > 0) {\r\n            console.log(\"filterValue\", filterValue[0].type)\r\n            setselectedasset(filterValue[0].value)\r\n            setselectedtype(filterValue[0].type)\r\n            setfilterAsset(filterValue)\r\n        }\r\n    }\r\n\r\n    var filterAssetRender = filterAsset.map((result, index) => {\r\n        return <option value={result.value}>{result.label}</option>\r\n    })\r\n\r\n    var alertRender;\r\n\r\n    console.log(\"selected type\", selectedtype)\r\n\r\n    const triggerSend = async (e) => {\r\n        e.preventDefault()\r\n        if (receiverAddress === \"\" || sendToken === \"\") {\r\n            ToastPopup.failure(\"Fill All the Fields\")\r\n            return\r\n        }\r\n        // Regular expression pattern to match Ethereum wallet address\r\n        if (!addressRegex.test(receiverAddress)) {\r\n            ToastPopup.failure(\"Invalid Address.Address start with 0x\")\r\n            return\r\n        }\r\n        if (parseFloat(sendToken) <= 0) {\r\n            ToastPopup.failure(\"Send token must be greater the zero\")\r\n            return\r\n        }\r\n\r\n        if (parseFloat(sendToken) > parseFloat(assetBalance)) {\r\n            ToastPopup.failure(\"Low Balance\")\r\n            return\r\n        }\r\n        console.log(\"token\", selectedtype)\r\n\r\n\r\n        BlockPopup.standard('.sendtoken', `Please wait... Don't Close`);\r\n        if (selectedtype === \"coin\") {\r\n            const sendResult = await sendCoin(provider, signer, receiverAddress, sendToken)\r\n            console.log(\"sendResult\", sendResult)\r\n            settxnStatus(sendResult)\r\n            getBalance()\r\n            getBalanceDashboard()\r\n            BlockPopup.remove('.sendtoken');\r\n\r\n        } else if (selectedtype === \"token\") {\r\n            let findasset = AVAILABLE_ASSETS.find(x => x.value === selectedasset && x.networkID === parseInt(chainId))\r\n            const sendResult = await sendTokenFromContract(provider, signer, findasset.contractAddress, receiverAddress, sendToken)\r\n            console.log(\"sendResult\", sendResult)\r\n            settxnStatus(sendResult)\r\n            getBalance()\r\n            getBalanceDashboard()\r\n            console.log(\"SUBMIT RESULT\", sendResult)\r\n            BlockPopup.remove('.sendtoken');\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n\r\n                <div\r\n                    id=\"sendModal\"\r\n                    className=\"modal fade \"\r\n                    tabIndex={-1}\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n\r\n                    <div className=\"modal-dialog\">\r\n\r\n                        <div className=\"modal-content sendtoken\">\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div>\r\n                                    <div>\r\n                                        <div className=\"row g-0\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"p-xl-5 p-3\">\r\n\r\n                                                    <h3 className=\"h3 mb-0 mt-3 text-center\">Send Token</h3>\r\n                                                    <p className=\"text-muted mt-1 mb-4 text-center\">\r\n                                                        Enter your Valid Wallet Address (XRC20) otherwise you will lose your fund.\r\n                                                    </p>\r\n                                                    {/*form start*/}\r\n                                                    <form onSubmit={triggerSend} className=\"authentication-form\">\r\n                                                        <div className=\"mb-3\">\r\n                                                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n                                                                Wallet Address <small>*</small>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                id=\"exampleInputEmail1\"\r\n                                                                placeholder=\"0x......\"\r\n                                                                onChange={(e) => setreceiverAddress(e.target.value)}\r\n                                                                value={receiverAddress}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"mb-3\">\r\n                                                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n                                                                Number of Tokens to Send <small>*</small>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"number\"\r\n\r\n                                                                className=\"form-control\"\r\n                                                                id=\"exampleInputEmail1\"\r\n                                                                placeholder=\"10\"\r\n                                                                onChange={(e) => setSendToken(e.target.value)}\r\n                                                                value={sendToken}\r\n\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"mb-3\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col\">\r\n                                                                    <ul className=\"checkout-list\">\r\n                                                                        <li>\r\n                                                                            <span>Select Asset</span>\r\n                                                                            <span>\r\n                                                                                <select value={selectedasset} onChange={(e) => setselectedasset(e.target.value)} className='form-select'>\r\n                                                                                    {filterAssetRender}\r\n                                                                                </select>\r\n                                                                            </span>\r\n                                                                        </li>\r\n                                                                        <li>\r\n                                                                            <span>Your Balance</span>\r\n                                                                            <span className=\"checkout-total\">{parseFloat(assetBalance).toFixed(4)} {selectedasset}</span>\r\n                                                                        </li>\r\n                                                                        <li>\r\n                                                                            <span>{selectedasset} Current Price</span>\r\n                                                                            <span className=\"checkout-balance text-primary\">{currentPrice} USD</span>\r\n                                                                        </li>\r\n\r\n\r\n                                                                    </ul>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                        {txnStatus && txnStatus.status && Object.keys(txnStatus).length > 0 && <div role=\"alert\" class=\"alert text-success bg-white border alert-dismissible\">\r\n                                                            <div class=\"d-flex align-items-start\">\r\n                                                                <span class=\"badge badge-soft-success align-self-center me-3\">Success</span>\r\n                                                                <div class=\"w-100\">Your transaction is success <a href={EXPLORER_TXN_URL_LIST[chainId] + txnStatus.txhash} target=\"_blank\" class=\"text-success alert-link\">View Transaction</a></div>\r\n                                                            </div>\r\n                                                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                                                        </div>}\r\n                                                        {(txnStatus && Object.keys(txnStatus).length > 0 && !txnStatus.status) && <div role=\"alert\" class=\"alert text-danger bg-white border alert-dismissible\">\r\n                                                            <div class=\"d-flex align-items-start\">\r\n                                                                <span class=\"badge badge-soft-danger align-self-center me-3\">Ohh no!</span>\r\n                                                                <div class=\"w-100\">Your transaction is failed <a href={EXPLORER_TXN_URL_LIST[chainId] + txnStatus.txhash} target=\"_blank\" class=\"text-danger alert-link\">View Transaction</a></div>\r\n                                                            </div>\r\n                                                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                                                        </div>}\r\n\r\n\r\n                                                        <div className=\"mb-0 text-center d-grid\">\r\n                                                            {!balloading ? <button className=\"btn btn-primary\" type=\"submit\">\r\n                                                                Send\r\n                                                            </button> : <button class=\"btn btn-outline-primary btn-sm\" type=\"button\">\r\n                                                                <span class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                                Fetching details..\r\n                                                            </button>}\r\n                                                        </div>\r\n                                                    </form>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>{\" \"}\r\n                                    {/* end card-body */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendToken\r\n","import React, { useEffect, useRef } from 'react';\r\nimport QRCode from 'qrcode';\r\n\r\nconst QRCodeGenerator = ({ tokenAddress, tokenAmount, label, message, size }) => {\r\n    const qrCodeRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const generateQRCode = async () => {\r\n            try {\r\n                const link = `ethereum:${tokenAddress}?label=${encodeURIComponent(\r\n                    label\r\n                )}&message=${encodeURIComponent(message)}`;\r\n                const canvas = qrCodeRef.current;\r\n                await QRCode.toCanvas(canvas, link, { width: size, height: size });\r\n                console.log('QR code generated!');\r\n            } catch (error) {\r\n                console.error('Error generating QR code:', error);\r\n            }\r\n        };\r\n\r\n        generateQRCode();\r\n    }, [tokenAddress, tokenAmount, label, message, size]);\r\n\r\n    return <canvas ref={qrCodeRef} />;\r\n};\r\n\r\nexport default QRCodeGenerator;\r\n","import React from 'react'\r\nimport QRCodeGenerator from '../common/QRCodeGenerator'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ReceiveToken = () => {\r\n    const { user } = useSelector(state => state.auth)\r\n    return (\r\n        <div>\r\n            <>\r\n\r\n                <div\r\n                    id=\"receiveModal\"\r\n                    className=\"modal fade\"\r\n                    tabIndex={-1}\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n\r\n                    <div className=\"modal-dialog\">\r\n\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div>\r\n                                    <div>\r\n                                        <div className=\"row g-0\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"p-xl-5 p-3\">\r\n\r\n\r\n                                                    <h3 className=\"h3 mb-0 mt-3 text-center\">Receive Token</h3>\r\n                                                    <p className=\"text-muted mt-1 mb-4 text-center\">\r\n                                                        Send Valid (XRC20) Tokens otherwise you will lose your fund.\r\n                                                    </p>\r\n                                                    <div className='text-center'>\r\n                                                        <QRCodeGenerator\r\n                                                            tokenAddress={user.walletAddress}\r\n                                                            // tokenAmount=\"100\"\r\n                                                            label=\"My ERC20 Tokens\"\r\n                                                            message=\"Thank you for your support\"\r\n                                                            size={300}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>{\" \"}\r\n                                    {/* end card-body */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceiveToken\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AVAILABLE_ASSETS, BlockPopup, RPC_URL_BY_CHAIN, EXPLORER_TXN_URL_LIST, ToastPopup, addressRegex, API_URL } from '../../actions/constant'\r\nimport { getCoinBalance, getMarketPrice, getTokenBalance, getTokenSymbol, sendCoin, sendTokenFromContract } from '../../actions/common'\r\nimport truncateEthAddress from 'truncate-eth-address'\r\nimport TextField from '../common/TextField'\r\nimport axios from 'axios'\r\n\r\nconst CustomToken = ({ getBalanceDashboard }) => {\r\n\r\n    const { chainId, signer, provider } = useSelector(state => state.web3)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    const [loading, setloading] = useState(\"\")\r\n\r\n    //Sent Token Forms\r\n\r\n    const [contractAddress, setcontractAddress] = useState(\"\")\r\n    const [symbol, setsymbol] = useState(\"\")\r\n    const [name, setname] = useState(\"\")\r\n    const [errors, seterrors] = useState({})\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getSymbol = async () => {\r\n            if (contractAddress !== \"\" && addressRegex.test(contractAddress)) {\r\n                const getSymbolValue = await getTokenSymbol(contractAddress, signer)\r\n                console.log(\"getSymbolValue\", getSymbolValue)\r\n                setsymbol(getSymbolValue)\r\n            }\r\n        }\r\n\r\n        getSymbol()\r\n\r\n\r\n    }, [contractAddress])\r\n\r\n\r\n\r\n\r\n    const triggerAddToken = async (e) => {\r\n        e.preventDefault()\r\n        if (contractAddress === \"\" || symbol === \"\") {\r\n            ToastPopup.failure(\"Fill All the Fields\")\r\n            return\r\n        }\r\n        // Regular expression pattern to match Ethereum wallet address\r\n        if (!addressRegex.test(contractAddress)) {\r\n            ToastPopup.failure(\"Invalid Contract Address.Address start with 0x\")\r\n            return\r\n        }\r\n        BlockPopup.standard('.addcustomtoken', `Please wait... Don't Close`);\r\n\r\n        try {\r\n            const insertData = {\r\n                contractAddress,\r\n                symbol,\r\n                name,\r\n                decimal: \"18\"\r\n            }\r\n            let result = await axios.post(API_URL + \"/api/customtoken\", insertData)\r\n            if (result.data) {\r\n                setcontractAddress(\"\")\r\n                setsymbol(\"\")\r\n                setname(\"\")\r\n                BlockPopup.remove('.addcustomtoken');\r\n                ToastPopup.success(\"Successfully Added\")\r\n            }\r\n        } catch (err) {\r\n            BlockPopup.remove('.addcustomtoken');\r\n            if (err && err.response && err.response.data) {\r\n                seterrors(err.response.data)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n\r\n                <div\r\n                    id=\"customtokenModal\"\r\n                    className=\"modal fade \"\r\n                    tabIndex={-1}\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n\r\n                    <div className=\"modal-dialog\">\r\n\r\n                        <div className=\"modal-content addcustomtoken\">\r\n                            <div className=\"modal-body\">\r\n\r\n                                <div>\r\n                                    <div>\r\n                                        <div className=\"row g-0\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"p-xl-5 p-3\">\r\n\r\n                                                    <h3 className=\"h3 mb-0 mt-3 text-center\">Add Custom Token</h3>\r\n                                                    <p className=\"text-muted mt-1 mb-4 text-center\">\r\n                                                        Enter your Valid Contract Address to add custome token.\r\n                                                    </p>\r\n                                                    {/*form start*/}\r\n                                                    <form onSubmit={triggerAddToken} className=\"authentication-form\">\r\n                                                        <div className=\"mb-3\">\r\n                                                            <TextField\r\n                                                                isRequired\r\n                                                                label=\"Token Name (for your Reference)\"\r\n                                                                onChange={(e) => setname(e.target.value)}\r\n                                                                value={name}\r\n                                                                placeholder=\"\"\r\n                                                                error={errors.symbol}\r\n                                                            />\r\n\r\n                                                        </div>\r\n                                                        <div className=\"mb-3\">\r\n\r\n                                                            <TextField\r\n                                                                isRequired\r\n                                                                label=\"Contract Address\"\r\n                                                                onChange={(e) => setcontractAddress(e.target.value)}\r\n                                                                value={contractAddress}\r\n                                                                placeholder=\"0x......\"\r\n                                                                error={errors.contractAddress}\r\n                                                            />\r\n\r\n                                                        </div>\r\n                                                        <div className=\"mb-3\">\r\n                                                            <TextField\r\n                                                                isRequired\r\n                                                                label=\"Symbol\"\r\n                                                                onChange={(e) => setsymbol(e.target.value)}\r\n                                                                value={symbol}\r\n                                                                placeholder=\"\"\r\n                                                                error={errors.symbol}\r\n                                                            />\r\n\r\n                                                        </div>\r\n\r\n\r\n\r\n\r\n                                                        <div className=\"mb-0 text-center d-grid\">\r\n                                                            {!loading ? <button className=\"btn btn-primary\" type=\"submit\">\r\n                                                                Add Token\r\n                                                            </button> : <button class=\"btn btn-outline-primary btn-sm\" type=\"button\">\r\n                                                                <span class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                                Please Wait..\r\n                                                            </button>}\r\n                                                        </div>\r\n                                                    </form>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>{\" \"}\r\n                                    {/* end card-body */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomToken\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport BaseLayout from '../commonlayout/BaseLayout';\r\nimport { copyTextToClipboard, getCoinBalance, getMarketPrice, getTokenBalance, getTxnStatus } from '../../actions/common';\r\nimport truncateEthAddress from 'truncate-eth-address'\r\nimport { setBalance } from '../../reducers/web3Reducer';\r\nimport SendToken from './SendToken';\r\nimport ReceiveToken from './ReceiveToken';\r\nimport { API_URL, AVAILABLE_ASSETS, EXPLORER_TXN_URL_LIST, EXPLORER_URL_LIST, RPC_URL_BY_CHAIN, TXN_API_URL_LIST, WALLET_URL_LIST } from '../../actions/constant';\r\nimport axios from 'axios';\r\nimport CustomToken from './CustomToken';\r\n\r\nconst Dashboard = () => {\r\n    const { user } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const { connected, providerConnect, provider, signer, balance, symbol, chainId } = useSelector(state => state.web3)\r\n\r\n    const [tokenList, settokenList] = useState([])\r\n    const [customtokenList, setcustomtokenList] = useState([])\r\n    const [TokenRender, setTokenRender] = useState([])\r\n    const [CustomTokenRender, setCustomTokenRender] = useState([])\r\n\r\n    const [TxnRender, setTxnRender] = useState([])\r\n    const [txnLoading, settxnLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (connected) {\r\n            getBalance()\r\n            getCustomToken()\r\n        }\r\n\r\n    }, [connected])\r\n    const getBalance = async () => {\r\n        if (connected && signer) {\r\n            let balance = await getCoinBalance(signer)\r\n            dispatch(setBalance(parseFloat(balance).toFixed(4)))\r\n            const filterValue = AVAILABLE_ASSETS.filter(x => x.networkID === parseInt(chainId) && x.type === \"token\")\r\n            settokenList(filterValue)\r\n\r\n        }\r\n    }\r\n\r\n    const getCustomToken = async () => {\r\n        try {\r\n            let result = await axios.get(API_URL + \"/api/customtoken\")\r\n            setcustomtokenList(result.data)\r\n        } catch (err) {\r\n            setcustomtokenList([])\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchCustomTokenData() {\r\n            const promises = customtokenList.map(async (result) => {\r\n                const balance = await getTokenBalance(result.contractAddress, user.walletAddress, signer);\r\n                return { ...result, balance };\r\n            });\r\n\r\n            const resolvedTokens = await Promise.all(promises);\r\n            setCustomTokenRender(resolvedTokens);\r\n        }\r\n\r\n        fetchCustomTokenData();\r\n    }, [customtokenList]);\r\n\r\n    useEffect(() => {\r\n        async function fetchTokenData() {\r\n            const promises = tokenList.map(async (result) => {\r\n                const balance = await getTokenBalance(result.contractAddress, user.walletAddress, signer);\r\n                const currentPrice = await getMarketPrice(result.ids);\r\n\r\n                return { ...result, balance, currentPrice };\r\n            });\r\n\r\n            const resolvedTokens = await Promise.all(promises);\r\n            setTokenRender(resolvedTokens);\r\n        }\r\n\r\n        fetchTokenData();\r\n    }, [tokenList]);\r\n\r\n    const fetchTransaction = async () => {\r\n        settxnLoading(true)\r\n        const url = `${TXN_API_URL_LIST[chainId]}/${user.walletAddress}?page=1&limit=10&tx_type=all`;\r\n        const response = await axios.get(url);\r\n\r\n        if (response.data && response.data.items) {\r\n            const promises = response.data.items.map(async (result) => {\r\n                const [txHash, status] = await getTxnStatus(result.hash, provider);\r\n                return { txHash, status: status ? \"success\" : \"failure\", color: status ? \"success\" : \"danger\" };\r\n            });\r\n\r\n            const resolvedTxn = await Promise.all(promises);\r\n\r\n            setTxnRender(resolvedTxn);\r\n            settxnLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetchTransaction();\r\n    }, [balance]);\r\n\r\n    var TxnListRender = TxnRender.map(result => {\r\n        return <div className=\"row justify-content-sm-between mt-4\">\r\n            <div className=\"col-lg-6\">\r\n\r\n                <a href={`${EXPLORER_TXN_URL_LIST[chainId]}${result.txHash}`} target=\"_blank\">  {result.txHash && truncateEthAddress(result.txHash)}</a> {\"\"}\r\n\r\n\r\n                <span style={{ cursor: \"pointer\" }} onClick={() => {\r\n                    copyTextToClipboard(result.txHash)\r\n                }}>\r\n                    <img\r\n                        src=\"assets/images/icons/copy.svg\"\r\n                        className=\"align-self-center\"\r\n                        alt=\"logo-img\"\r\n                        height={16}\r\n                    />\r\n                </span>\r\n                {/* end checkbox */}\r\n            </div>{\" \"}\r\n            {/* end col */}\r\n\r\n            <div className=\"col-lg-6\">\r\n                <ul\r\n                    className=\"list-inline text-sm-end mb-0\"\r\n                    id=\"tooltip-container2\"\r\n                >\r\n\r\n                    <li className=\"list-inline-item\">\r\n                        <span className={`badge badge-soft-${result.color}  p-1\"`}>\r\n                            {result.status}\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n            </div>{\" \"}\r\n            {/* end col */}\r\n        </div>\r\n    })\r\n\r\n\r\n    return (\r\n        <BaseLayout>\r\n            <section className=\"position-relative overflow-hidden bg-gradient2 py-3 px-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"page-title\">\r\n                                <h3 className=\"mb-0\">Hi {user.firstName}</h3>\r\n                                <p className=\"mt-1 fw-medium\">Welcome to XiPay!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-2\">\r\n                        {/* profile widget star */}\r\n                        <div className=\"col-lg-5\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <div className=\"d-flex\">\r\n                                                <img\r\n                                                    src=\"https://xinfin.org/assets/images/brand-assets/xdc-icon.png\"\r\n                                                    className=\"img-fluid avatar-sm rounded-sm me-3\"\r\n                                                    alt=\"...\"\r\n                                                />\r\n                                                <div className=\"flex-grow-1\">\r\n                                                    <h4 className=\"mb-1 mt-0 fs-16\">{user.walletAddress && truncateEthAddress(user.walletAddress)}\r\n                                                        <span style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                                            copyTextToClipboard(user.walletAddress)\r\n                                                        }}>\r\n                                                            <i data-feather=\"copy\"></i>\r\n                                                        </span>\r\n                                                    </h4>\r\n                                                    <h2>{balance} {symbol}</h2>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-auto text-end\">\r\n                                            <div className=\"dropdown\">\r\n                                                <a\r\n                                                    className=\"btn-link text-muted dropdown-toggle arrow-none\"\r\n                                                    href=\"#\"\r\n                                                    role=\"button\"\r\n                                                    id=\"dropdownMenuLink-1\"\r\n                                                    data-bs-toggle=\"dropdown\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                    aria-expanded=\"false\"\r\n                                                >\r\n                                                    <i\r\n                                                        className=\"icon icon-xs\"\r\n                                                        data-feather=\"more-horizontal\"\r\n                                                    />\r\n                                                </a>\r\n                                                <div\r\n                                                    className=\"dropdown-menu dropdown-menu-end\"\r\n                                                    aria-labelledby=\"dropdownMenuLink-1\"\r\n                                                >\r\n                                                    <a className=\"dropdown-item\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#sendModal\">\r\n                                                        <i className=\"icon-xxs icon me-2\" data-feather=\"send\" />\r\n                                                        Send\r\n                                                    </a>\r\n                                                    <a className=\"dropdown-item\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#receiveModal\">\r\n                                                        <i\r\n                                                            className=\"icon-xxs icon me-2\"\r\n                                                            data-feather=\"download\"\r\n                                                        />\r\n                                                        Receive\r\n                                                    </a>\r\n                                                    <div className=\"dropdown-divider\" />\r\n                                                    <a className=\"dropdown-item text-primary\" target='_blank' href={`${WALLET_URL_LIST[chainId]}/${user.walletAddress}`}>\r\n                                                        <i\r\n                                                            className=\"icon-xxs icon me-2\"\r\n                                                            data-feather=\"eye\"\r\n                                                        />\r\n                                                        View on Explorer\r\n                                                    </a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row align-items-center justify-content-center pt-1\">\r\n\r\n                                        <button type=\"button\" class=\"btn btn-soft-primary col-5 me-2\" data-bs-toggle=\"modal\" data-bs-target=\"#sendModal\"><span class=\"pln\">Send</span></button>\r\n                                        {/* </div> */}\r\n                                        {/* <div className=\"col-md-4\"> */}\r\n                                        <button type=\"button\" class=\"btn btn-soft-success col-5 me-2\" data-bs-toggle=\"modal\" data-bs-target=\"#receiveModal\"><span class=\"pln\">Receive</span></button>\r\n\r\n\r\n                                        {/* </div> */}\r\n                                    </div>\r\n\r\n                                    <div className=\"row mt-4\">\r\n                                        <div className=\"col\">\r\n                                            <ul className=\"list-group custom-list-item \">\r\n                                                {\r\n                                                    TokenRender.map(result => {\r\n                                                        return <li className=\"list-group-item\">\r\n                                                            <div className=\"d-flex align-items-center\">\r\n                                                                <img width=\"32\" style={{ borderRadius: 50 }} src={result.icon} alt=\"Logo\" className=\"logo\" />\r\n                                                                <div className=\"ms-3\">\r\n                                                                    <h5 className=\"mb-0 item-name\">{result.name} ({result.value})</h5>\r\n                                                                </div>\r\n                                                                <div className=\"ms-auto\">\r\n                                                                    <h5 class=\"mt-0 mb-0 text-right\">{result.balance}</h5>\r\n                                                                    <h6 className=\"mb-0 item-details text-secondary text-right\">{result.currentPrice} USD</h6>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    })\r\n                                                }\r\n\r\n                                                {\r\n                                                    CustomTokenRender.map(result => {\r\n                                                        return <li className=\"list-group-item\">\r\n                                                            <div className=\"d-flex align-items-center\">\r\n                                                                <img width=\"32\" style={{ borderRadius: 50 }} src={\"https://ui-avatars.com/api/?background=244b81&color=fff&name=\" + result.symbol} alt=\"Logo\" className=\"logo\" />\r\n                                                                <div className=\"ms-3\">\r\n                                                                    <h5 className=\"mb-0 item-name\">{result.name} ({result.symbol})</h5>\r\n                                                                </div>\r\n                                                                <div className=\"ms-auto\">\r\n                                                                    <h5 class=\"mt-0 mb-0 text-right\">{result.balance}</h5>\r\n                                                                    <h6 className=\"mb-0 item-details text-secondary text-right\">~ USD</h6>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    })\r\n                                                }\r\n\r\n\r\n                                            </ul>\r\n                                            <div class=\"text-center\">\r\n                                                <button data-bs-toggle=\"modal\" data-bs-target=\"#customtokenModal\" class=\"btn btn-soft-danger btn-sm\" type=\"button\">\r\n                                                    <i data-feather=\"plus-circle\" className='mx-1' />\r\n                                                    Add Custom Token\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* profile widget end */}\r\n                        {/* stats start */}\r\n                        <div className=\"col-lg-3\">\r\n                            <div>\r\n                                <div className=\"row d-flex align-items-center my-2 pb-2\">\r\n                                    <img src=\"assets/images/ad-place.png\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"avatar-sm icon icon-with-bg icon-xs rounded-sm bg-soft-success me-3\">\r\n                                            <i className=\"icon-dual-success\" data-feather=\"file\" />\r\n                                        </div>\r\n                                        <div className=\"flex-grow-1\">\r\n                                            <h3 className=\"mt-0 mb-0\">21</h3>\r\n                                            <p className=\"text-muted mb-0\">Invoice Created</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"avatar-sm icon icon-with-bg icon-xs rounded-sm bg-soft-info me-3 flex-shrink-0\">\r\n                                            <i className=\"icon-dual-info\" data-feather=\"camera\" />\r\n                                        </div>\r\n                                        <div className=\"flex-grow-1\">\r\n                                            <h3 className=\"mt-0 mb-0\">21</h3>\r\n                                            <p className=\"text-muted mb-0\">QR Payments</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <div className=\"avatar-sm icon icon-with-bg icon-xs rounded-sm bg-soft-info me-3 flex-shrink-0\">\r\n                                            <i className=\"icon-dual-primary\" data-feather=\"shopping-bag\" />\r\n                                        </div>\r\n                                        <div className=\"flex-grow-1\">\r\n                                            <h3 className=\"mt-0 mb-0\">10</h3>\r\n                                            <p className=\"text-muted mb-0\">Web Payments</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* stats end */}\r\n                        {/* revenue start */}\r\n                        <div className=\"col-lg-4\">\r\n\r\n\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col\">\r\n                                                    <h4 class=\"mb-3 mt-0 fs-16\">Transactions {\"\"}\r\n                                                        {!txnLoading ? <span style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                                            fetchTransaction()\r\n                                                        }}>\r\n                                                            <img\r\n                                                                src=\"assets/images/icons/refresh.svg\"\r\n                                                                className=\"align-self-center\"\r\n                                                                alt=\"logo-img\"\r\n                                                                height={16}\r\n                                                            />\r\n\r\n                                                        </span> : <span class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>}\r\n                                                    </h4>\r\n                                                </div>\r\n                                                <div class=\"col-auto text-end\">\r\n                                                    <a href={`${WALLET_URL_LIST[chainId]}/${user.walletAddress}`} target=\"_blank\" class=\"fw-semibold text-primary fs-13\">View All <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-arrow-right ms-1 icon-xxs\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg></a>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                TxnListRender\r\n                                            }\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        {/* revenue end */}\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n            <SendToken getBalanceDashboard={getBalance} />\r\n            <ReceiveToken />\r\n            <CustomToken />\r\n        </BaseLayout>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","const appendScript = (scriptToAppend) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = scriptToAppend;\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n}\r\nexport default appendScript;","const removeScript = (scriptToremove) => {\r\n    let allsuspects=document.getElementsByTagName(\"script\");\r\n    for (let i=allsuspects.length; i>=0; i--){\r\nif (allsuspects[i] && allsuspects[i].getAttribute(\"src\")!==null \r\n  && allsuspects[i].getAttribute(\"src\").indexOf(`${scriptToremove}`)                !== -1 ){\r\n           allsuspects[i].parentNode.removeChild(allsuspects[i])\r\n        }    \r\n    }\r\n}\r\nexport default removeScript;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["getCoinBalance","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","signer","balvalue","result","wrap","_context","prev","next","getBalance","sent","ethers","abrupt","stop","_x","apply","arguments","getTokenBalance","_ref2","_callee2","contractAddress","address","tokencontract","assetrate","convertedprice","_context2","TokenABI","balanceOf","_x2","_x3","_x4","getTokenSymbol","_ref3","_callee3","assetsymbol","_context3","symbol","_x5","_x6","copyTextToClipboard","text","navigator","clipboard","writeText","then","ToastPopup","success","catch","error","failure","getMarketPrice","_ref4","_callee4","ids","temp","_context4","axios","concat","data","parseFloat","toFixed","t0","console","log","_x7","sendCoin","_ref5","_callee5","provider","sendAddress","sendValue","transactionHash","_yield$getTxnStatus","_yield$getTxnStatus2","txhash","status","_context5","sendTransaction","to","value","hash","getTxnStatus","_slicedToArray","_x8","_x9","_x10","_x11","sendTokenFromContract","_ref6","_callee6","contract","recipientAddress","amount","_yield$getTxnStatus3","_yield$getTxnStatus4","_context6","transfer","_x12","_x13","_x14","_x15","_x16","sleep","milliseconds","Promise","resolve","setTimeout","_ref7","_callee7","txHash","transactionReceipt","_context7","getTransactionReceipt","_x17","_x18","TextField","name","placeholder","label","info","type","onChange","disabled","isRequired","forgotView","forgotLink","id","_jsxs","_Fragment","children","lassName","_jsx","className","classnames","defaultProps","key","useLocation","useEffect","appendScript","removeScript","dispatch","useDispatch","user","useSelector","state","auth","navlinks","link","icon","pathname","window","location","navRender","map","currentLink","Link","photoLink","photo","href","src","height","alt","role","width","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","x","y","d","opacity","cx","cy","r","onClick","e","preventDefault","firstName","walletAddress","truncateEthAddress","logoutUser","Navbar","Footer","getBalanceDashboard","_useSelector","web3","chainId","_useState","useState","_useState2","selectedasset","setselectedasset","_useState3","_useState4","selectedtype","setselectedtype","_useState5","_useState6","filterAsset","setfilterAsset","_useState7","_useState8","assetBalance","setAssetBalance","_useState9","_useState10","currentPrice","setcurrentPrice","_useState11","_useState12","balloading","setballoading","_useState13","_useState14","receiverAddress","setreceiverAddress","_useState15","_useState16","sendToken","setSendToken","_useState17","_useState18","txnStatus","settxnStatus","filterAssets","findType","AVAILABLE_ASSETS","find","networkID","parseInt","findasset","getBal","currentprice","_getBal","_currentprice","filterValue","filter","length","filterAssetRender","index","triggerSend","sendResult","_sendResult","addressRegex","test","BlockPopup","standard","remove","tabIndex","onSubmit","htmlFor","target","Object","keys","class","EXPLORER_TXN_URL_LIST","tokenAddress","tokenAmount","message","size","qrCodeRef","useRef","generateQRCode","canvas","encodeURIComponent","current","QRCode","ref","QRCodeGenerator","loading","setcontractAddress","setsymbol","setname","errors","seterrors","getSymbol","getSymbolValue","triggerAddToken","insertData","decimal","API_URL","response","_useSelector2","connected","providerConnect","balance","tokenList","settokenList","customtokenList","setcustomtokenList","TokenRender","setTokenRender","CustomTokenRender","setCustomTokenRender","TxnRender","setTxnRender","txnLoading","settxnLoading","getCustomToken","_balance","setBalance","_fetchCustomTokenData","promises","resolvedTokens","_objectSpread","all","fetchCustomTokenData","_fetchTokenData","fetchTokenData","fetchTransaction","_callee8","url","resolvedTxn","_context8","TXN_API_URL_LIST","items","color","TxnListRender","style","cursor","BaseLayout","WALLET_URL_LIST","borderRadius","x1","y1","x2","y2","points","SendToken","ReceiveToken","CustomToken","scriptToAppend","script","document","createElement","async","body","appendChild","scriptToremove","allsuspects","getElementsByTagName","i","getAttribute","indexOf","parentNode","removeChild","hasOwn","hasOwnProperty","classNames","classes","arg","argType","push","Array","isArray","inner","toString","prototype","includes","call","join","module","exports","default"],"sourceRoot":""}
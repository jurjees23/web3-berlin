{"version":3,"file":"static/js/79.a3f361de.chunk.js","mappings":"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","sources":["components/auth/Auth.js","tkey.js","utils/appendScript.js","utils/removeScript.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport appendScript from \"../../utils/appendScript\"\r\nimport removeScript from \"../../utils/removeScript\"\r\nimport swal from 'sweetalert';\r\nimport { tKey } from \"../../tkey\"\r\nimport { EthereumPrivateKeyProvider } from \"@web3auth/ethereum-provider\";\r\nimport Web3 from \"web3\";\r\nimport BN from 'bn.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../actions/authAction';\r\nimport { ethers } from 'ethers';\r\nimport { setWeb3 } from '../../reducers/web3Reducer';\r\nimport { AVAILABLE_NETWORK } from '../../actions/constant';\r\nconst Auth = () => {\r\n\r\n    const { key } = useLocation()\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const { isAuthenticated } = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        appendScript(\"./assets/js/vendor.min.js\")\r\n        appendScript(\"./assets/js/theme.min.js\")\r\n\r\n        return () => {\r\n            removeScript(\"./assets/js/vendor.min.js\")\r\n            removeScript(\"./assets/js/theme.min.js\")\r\n        }\r\n\r\n    }, [key])\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [privateKey, setPrivateKey] = useState();\r\n    const [oAuthShare, setOAuthShare] = useState();\r\n    const [provider, setProvider] = useState();\r\n\r\n\r\n\r\n    // Init Service Provider inside the useEffect Method\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            // Initialization of Service Provider\r\n            try {\r\n                // Init is required for Redirect Flow but skip fetching sw.js and redirect.html )\r\n                (tKey.serviceProvider).init({ skipInit: true });\r\n                if (window.location.pathname === \"/auth\" && window.location.hash.includes(\"#state\")) {\r\n                    let result = await (tKey.serviceProvider).directWeb.getRedirectResult();\r\n                    tKey.serviceProvider.postboxKey = new BN(result.result && result.result.privateKey, \"hex\");\r\n                    setUser((result.result).userInfo);\r\n                    setOAuthShare((result.result).privateKey);\r\n                    initializeNewKey();\r\n                } else if (!privateKey) {\r\n                    navigate(\"/login\")\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        init();\r\n        const ethProvider = async () => {\r\n            const ethereumPrivateKeyProvider = new EthereumPrivateKeyProvider({\r\n                config: {\r\n                    /*\r\n                    pass the chain config that you want to connect with\r\n                    all chainConfig fields are required.\r\n                    */\r\n                    chainConfig: {\r\n                        chainId: \"0x33\", // EVM chain's Chain ID\r\n                        rpcTarget: \"https://erpc.apothem.network\", // EVM chain's RPC endpoint\r\n                        // Avoid using public rpcTarget in production.\r\n                        // Use services like Infura, Quicknode, Alchemy, Ankr etc.\r\n                        displayName: \"XDC APOTHEM\", // EVM chain's Name\r\n                        blockExplorer: \"https://explorer.apothem.network/\", // EVM chain's Blockexplorer\r\n                        ticker: \"XDC\", // EVM chain's Ticker\r\n                        tickerName: \"Xinfin\", // EVM chain's Ticker Name\r\n                    },\r\n                },\r\n            });\r\n            /*\r\n            pass user's private key here.\r\n            after calling setupProvider, we can use\r\n            */\r\n            if (privateKey) {\r\n                localStorage.setItem(\"pkey\", privateKey)\r\n                await ethereumPrivateKeyProvider.setupProvider(privateKey);\r\n                setProvider(ethereumPrivateKeyProvider.provider);\r\n            }\r\n        }\r\n        ethProvider();\r\n    }, [privateKey]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (privateKey && provider && user) {\r\n            userLogin()\r\n\r\n        }\r\n    }, [privateKey, provider, user])\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            navigate(\"/user/dashboard\")\r\n\r\n        }\r\n    }, [isAuthenticated])\r\n\r\n    const userLogin = async () => {\r\n        // console.log(\"PRIVATE KEY :::::::::\", privateKey)\r\n        // console.log(\"PROVIDER :::::::::\", provider)\r\n        // console.log(\"USER INFO :::::::::\", user)\r\n\r\n        const providerConnect = new ethers.providers.Web3Provider(provider);\r\n        const { chainId } = await providerConnect.getNetwork()\r\n        localStorage.setItem(\"chainId\", chainId)\r\n        console.log(\"chainId\", chainId)\r\n        const signer = providerConnect.getSigner();\r\n        const address = await signer.getAddress();\r\n\r\n        var findNetwork = AVAILABLE_NETWORK.find(x => x.networkID === chainId)\r\n\r\n        const web3Data = {\r\n            //  providerConnect: providerConnect,\r\n            provider: providerConnect,\r\n            address: address,\r\n            signer: signer,\r\n            connected: true,\r\n            chainId: chainId,\r\n            symbol: findNetwork.symbol,\r\n            networkName: findNetwork.networkName\r\n        }\r\n\r\n        dispatch(setWeb3(web3Data))\r\n        const userInfo = {\r\n            firstName: user.name,\r\n            email: user.email,\r\n            walletAddress: address,\r\n            photo: user.profileImage,\r\n            origin: user.typeOfLogin,\r\n        }\r\n        console.log(\"userInfo\", userInfo)\r\n        dispatch(login(userInfo, \"user\"))\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const initializeNewKey = async () => {\r\n        if (!tKey) {\r\n            alert(\"tKey not initialized yet\")\r\n\r\n            return;\r\n        }\r\n        try {\r\n            // Initialization of tKey\r\n            await tKey.initialize(); // 1/2 flow\r\n            // Gets the deviceShare\r\n            console.log(tKey);\r\n            try {\r\n                // throw new Error('Device share not found');\r\n                await (tKey.modules.webStorage).inputShareFromWebStorage(); // 2/2 flow\r\n            } catch (e) {\r\n                console.log(\"e\", e)\r\n                // await backupShareRecover();\r\n                await recoverShare();\r\n            }\r\n\r\n            console.log(tKey);\r\n            // Checks the requiredShares to reconstruct the tKey,\r\n            // starts from 2 by default and each of the above share reduce it by one.\r\n            const { requiredShares } = tKey.getKeyDetails();\r\n            console.log(tKey);\r\n            if (requiredShares <= 0) {\r\n                const reconstructedKey = await tKey.reconstructKey();\r\n                setPrivateKey(reconstructedKey && reconstructedKey.privKey.toString(\"hex\"))\r\n            }\r\n        } catch (error) {\r\n            console.log(\"error\", error)\r\n\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n    };\r\n\r\n\r\n\r\n    const recoverShare = async () => {\r\n        if (!tKey) {\r\n            alert(\"tKey not initialized yet\")\r\n            return;\r\n        }\r\n        // swal is just a pretty dialog box\r\n        swal('Enter password (>10 characters)', {\r\n            content: 'input',\r\n        }).then(async value => {\r\n            if (value.length > 10) {\r\n                try {\r\n                    await (tKey.modules.securityQuestions).inputShareFromSecurityQuestions(value); // 2/2 flow\r\n                    const { requiredShares } = tKey.getKeyDetails();\r\n                    if (requiredShares <= 0) {\r\n                        const reconstructedKey = await tKey.reconstructKey();\r\n                        setPrivateKey(reconstructedKey && reconstructedKey.privKey.toString(\"hex\"))\r\n\r\n                    }\r\n                    const newShare = await tKey.generateNewShare();\r\n                    const shareStore = await tKey.outputShareStore(newShare.newShareIndex);\r\n                    await (tKey.modules.webStorage).storeDeviceShare(shareStore);\r\n                    swal('Success', 'Successfully logged you in with the recovery password.', 'success');\r\n                    console.log(\"Successfully logged you in with the recovery password.\")\r\n\r\n                } catch (error) {\r\n                    swal('Error', error && error.message.toString(), 'error');\r\n                    console.log(\"error\")\r\n                    logout();\r\n                }\r\n            } else {\r\n                swal('Error', 'Password must be >= 11 characters', 'error');\r\n                console.log(\"error\")\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"bg-gradient2 min-vh-100 align-items-center d-flex justify-content-center pt-2 pt-sm-5 pb-4 pb-sm-5\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-xl-12\">\r\n\r\n\r\n                        <div className=\"row g-0 d-flex justify-content-center\">\r\n                            <span className=\"pln\"> </span>\r\n                            <div className=\"spinner-border text-primary m-2\" role=\"status\">\r\n                                <span className=\"visually-hidden\">\r\n                                    <span className=\"pln\">Loading...</span>\r\n                                </span>\r\n                            </div>\r\n                            <span className=\"pln\"></span>\r\n                            <h4 className='text-center'>Loading your dashboard...</h4>\r\n\r\n                        </div>{\" \"}\r\n                        <div className='poweredby'>\r\n                            <img\r\n                                src=\"assets/images/poweredby.png\"\r\n                                className=\"align-self-center\"\r\n                                alt=\"logo-img\"\r\n                                height={50}\r\n                            />\r\n                        </div>\r\n                        {/* end card-body */}\r\n\r\n                        {/* end card */}\r\n                    </div>{\" \"}\r\n                    {/* end col */}\r\n                </div>\r\n                {/* end row */}\r\n            </div>\r\n            {/* end container */}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import ThresholdKey from \"@tkey/default\";\r\nimport WebStorageModule from \"@tkey/web-storage\";\r\nimport SecurityQuestionsModule from \"@tkey/security-questions\";\r\n\r\n// Configuration of Service Provider\r\nconst customAuthArgs = {\r\n  web3AuthClientId: \"BEglQSgt4cUWcj6SKRdu5QkOXTsePmMcusG5EAoyjyOYKlVRjIF1iCNnMOTfpzCiunHRrMui8TIwQPXdkQ8Yxuk\",\r\n  baseUrl: window.location.origin,\r\n  redirectPathName: \"auth\",\r\n  enableLogging: true,\r\n  uxMode: \"redirect\",\r\n  network: \"cyan\", // based on the verifier network.\r\n};\r\n// Configuration of Modules\r\nconst webStorageModule = new WebStorageModule();\r\nconst securityQuestionsModule = new SecurityQuestionsModule();\r\n\r\n// Instantiation of tKey\r\nexport const tKey = new ThresholdKey({\r\n  modules: {\r\n    webStorage: webStorageModule,\r\n    securityQuestions: securityQuestionsModule,\r\n  },\r\n  customAuthArgs: customAuthArgs,\r\n});\r\n\r\n","const appendScript = (scriptToAppend) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = scriptToAppend;\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n}\r\nexport default appendScript;","const removeScript = (scriptToremove) => {\r\n    let allsuspects=document.getElementsByTagName(\"script\");\r\n    for (let i=allsuspects.length; i>=0; i--){\r\nif (allsuspects[i] && allsuspects[i].getAttribute(\"src\")!==null \r\n  && allsuspects[i].getAttribute(\"src\").indexOf(`${scriptToremove}`)                !== -1 ){\r\n           allsuspects[i].parentNode.removeChild(allsuspects[i])\r\n        }    \r\n    }\r\n}\r\nexport default removeScript;"],"names":["key","useLocation","navigate","useNavigate","dispatch","useDispatch","isAuthenticated","useSelector","state","auth","useEffect","appendScript","removeScript","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","privateKey","setPrivateKey","_useState5","_useState6","setOAuthShare","_useState7","_useState8","provider","setProvider","init","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","tKey","serviceProvider","skipInit","window","location","pathname","hash","includes","directWeb","getRedirectResult","sent","postboxKey","BN","userInfo","initializeNewKey","t0","console","error","stop","apply","arguments","ethProvider","_ref2","_callee2","ethereumPrivateKeyProvider","_context2","EthereumPrivateKeyProvider","config","chainConfig","chainId","rpcTarget","displayName","blockExplorer","ticker","tickerName","localStorage","setItem","setupProvider","userLogin","_ref3","_callee3","providerConnect","_yield$providerConnec","signer","address","findNetwork","web3Data","_context3","ethers","getNetwork","log","getSigner","getAddress","AVAILABLE_NETWORK","find","x","networkID","connected","symbol","networkName","setWeb3","firstName","name","email","walletAddress","photo","profileImage","origin","typeOfLogin","login","_ref4","_callee4","_tKey$getKeyDetails","requiredShares","reconstructedKey","_context4","alert","abrupt","initialize","modules","webStorage","inputShareFromWebStorage","recoverShare","getKeyDetails","reconstructKey","privKey","toString","t1","_ref5","_callee6","_context6","swal","content","then","_ref6","_callee5","value","_tKey$getKeyDetails2","newShare","shareStore","_context5","length","securityQuestions","inputShareFromSecurityQuestions","generateNewShare","outputShareStore","newShareIndex","storeDeviceShare","message","_x","_jsx","className","children","_jsxs","role","src","alt","height","customAuthArgs","web3AuthClientId","baseUrl","redirectPathName","enableLogging","uxMode","network","webStorageModule","WebStorageModule","securityQuestionsModule","SecurityQuestionsModule","ThresholdKey","scriptToAppend","script","document","createElement","async","body","appendChild","scriptToremove","allsuspects","getElementsByTagName","i","getAttribute","indexOf","concat","parentNode","removeChild"],"sourceRoot":""}